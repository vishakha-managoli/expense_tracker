{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/ExpenseDate.js","components/Card.js","components/Expense.js","components/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/ExpensesChart.js","components/ExpensesFilter.js","components/Expensesass.js","App.js","reportWebVitals.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","ExpenseDate","month","toLocaleString","day","year","getFullYear","Card","classes","children","Expense","ExpensesList","items","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","getMonth","ExpensesFilter","onChangeFilter","Expensesass","filteredYear","setFilteredYear","filteredExpenses","filter","selected","selectedYear","DUMMY","App","setExpenses","prevExpenses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2cef7c07.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState('');\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n  // const [userInput, setUserInput] = useState({\r\n  //   enteredTitle: '',\r\n  //   enteredAmount: '',\r\n  //   enteredDate: '',\r\n  // });\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredTitle: event.target.value,\r\n    // });\r\n    // setUserInput((prevState) => {\r\n    //   return { ...prevState, enteredTitle: event.target.value };\r\n    // });\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredAmount: event.target.value,\r\n    // });\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredDate: event.target.value,\r\n    // });\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n  title: enteredTitle,\r\n  amount: +enteredAmount,\r\n  date: new Date(enteredDate),\r\n};\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className='new-expense__controls'>\r\n        <div className='new-expense__control'>\r\n          <label>Title</label>\r\n          <input\r\n            type='text'\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n          <label>Amount</label>\r\n          <input\r\n            type='number'\r\n            min='0.01'\r\n            step='0.01'\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n          <label>Date</label>\r\n          <input\r\n            type='date'\r\n            min='2019-01-01'\r\n            max='2022-12-31'\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='new-expense__actions'>\r\n      <button type='button' onClick={props.onCancel}>Cancel</button>\r\n        <button type='submit'>Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, {useState} from 'react';\r\n\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense = (props) => {\r\n  const[isEditing,setIsEditing]=useState(false);\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString()\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n const startEditingHandler=()=>{\r\n   setIsEditing(true);\r\n };\r\n\r\n const stopEditingHandler=()=>{\r\n   setIsEditing(false);\r\n }\r\n\r\n\r\n  return (\r\n    <div className='new-expense'>\r\n    {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\r\n    {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditingHandler} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import './ExpenseDate.css';\r\nfunction ExpenseDate(props){\r\n  const month =props.date.toLocaleString('en-US',{month : 'long'});\r\n  const day =props.date.toLocaleString('en-US',{day: '2-digit'});\r\n  const year =props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n    <div className=\"expense--date__month\">{month}</div>\r\n    <div className=\"expense-date__year\">{year}</div>\r\n    <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n export default ExpenseDate;\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n  const classes = 'card ' + props.className;\r\n\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from './Card';\r\nimport './Expensecss.css';\r\n\r\nconst Expense = (props) => {\r\n  return (\r\n    <li>\r\n    <Card className='expense-item'>\r\n      <ExpenseDate date={props.date} />\r\n        <div className='expense-item__description'>\r\n        <h2>{props.title}</h2>\r\n        <div className='expense-item__price'>${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n      </li>\r\n  );\r\n}\r\n\r\nexport default Expense;\r\n","import React from 'react';\r\n\r\nimport Expense from './Expense';\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className='expenses-list__fallback'>Found no expenses.</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className='expenses-list'>\r\n      {props.items.map((expense) => (\r\n        <Expense\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from 'react';\r\n\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = '0%';\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n  }\r\n\r\n  return (\r\n    <div className='chart-bar'>\r\n      <div className='chart-bar__inner'>\r\n        <div\r\n          className='chart-bar__fill'\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className='chart-bar__label'>{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from 'react';\r\n\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className='chart'>\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\n\r\nimport Chart from './Chart/Chart';\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler=(event)=>{\r\n  props.onChangeFilter(event.target.value);\r\n  };\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React, { useState } from 'react';\r\n\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\nimport Card from './Card';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport './Expensesass.css';\r\n\r\nconst Expensesass = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState('2020');\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n   const filteredExpenses=props.items.filter(expense=>{\r\n     return expense.date.getFullYear().toString() === filteredYear;\r\n   });\r\n  return (\r\n    <div>\r\n      <Card className='expenses'>\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n      <ExpensesChart expenses={filteredExpenses}/>\r\n      <ExpensesList items={filteredExpenses}/>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expensesass;\r\n","import React,{ useState } from 'react';\n\nimport NewExpense from './components/NewExpense/NewExpense';\nimport Expensesass from './components/Expensesass';\n\n\n  const DUMMY = [\n    {\n      id: 'e1',\n      title: 'Toilet Paper',\n      amount: 94.12,\n      date: new Date(2020, 7, 14),\n    },\n    { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n    {\n      id: 'e3',\n      title: 'Car Insurance',\n      amount: 294.67,\n      date: new Date(2021, 2, 28),\n    },\n    {\n      id: 'e4',\n      title: 'New Desk (Wooden)',\n      amount: 450,\n      date: new Date(2021, 5, 12),\n    },\n  ];\n  const App = () => {\n  const [expenses, setExpenses] = useState(DUMMY);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler}/>\n      <Expensesass items={expenses}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}